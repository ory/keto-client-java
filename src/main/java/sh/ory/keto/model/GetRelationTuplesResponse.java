/*
 * Ory Keto API
 * Documentation for all of Ory Keto's REST APIs. gRPC is documented separately. 
 *
 * The version of the OpenAPI document: v0.10.0-alpha.0
 * Contact: hi@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.keto.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import sh.ory.keto.model.RelationTuple;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import sh.ory.keto.JSON;

/**
 * GetRelationTuplesResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-27T13:43:10.921931843Z[Etc/UTC]")
public class GetRelationTuplesResponse {
  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "next_page_token";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_RELATION_TUPLES = "relation_tuples";
  @SerializedName(SERIALIZED_NAME_RELATION_TUPLES)
  private List<RelationTuple> relationTuples = null;

  public GetRelationTuplesResponse() { 
  }

  public GetRelationTuplesResponse nextPageToken(String nextPageToken) {
    
    this.nextPageToken = nextPageToken;
    return this;
  }

   /**
   * The opaque token to provide in a subsequent request to get the next page. It is the empty string iff this is the last page.
   * @return nextPageToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The opaque token to provide in a subsequent request to get the next page. It is the empty string iff this is the last page.")

  public String getNextPageToken() {
    return nextPageToken;
  }


  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public GetRelationTuplesResponse relationTuples(List<RelationTuple> relationTuples) {
    
    this.relationTuples = relationTuples;
    return this;
  }

  public GetRelationTuplesResponse addRelationTuplesItem(RelationTuple relationTuplesItem) {
    if (this.relationTuples == null) {
      this.relationTuples = new ArrayList<>();
    }
    this.relationTuples.add(relationTuplesItem);
    return this;
  }

   /**
   * Get relationTuples
   * @return relationTuples
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RelationTuple> getRelationTuples() {
    return relationTuples;
  }


  public void setRelationTuples(List<RelationTuple> relationTuples) {
    this.relationTuples = relationTuples;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRelationTuplesResponse getRelationTuplesResponse = (GetRelationTuplesResponse) o;
    return Objects.equals(this.nextPageToken, getRelationTuplesResponse.nextPageToken) &&
        Objects.equals(this.relationTuples, getRelationTuplesResponse.relationTuples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextPageToken, relationTuples);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRelationTuplesResponse {\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    relationTuples: ").append(toIndentedString(relationTuples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("next_page_token");
    openapiFields.add("relation_tuples");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetRelationTuplesResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (GetRelationTuplesResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetRelationTuplesResponse is not found in the empty JSON string", GetRelationTuplesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GetRelationTuplesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetRelationTuplesResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("next_page_token") != null && !jsonObj.get("next_page_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_page_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_page_token").toString()));
      }
      JsonArray jsonArrayrelationTuples = jsonObj.getAsJsonArray("relation_tuples");
      if (jsonArrayrelationTuples != null) {
        // ensure the json data is an array
        if (!jsonObj.get("relation_tuples").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `relation_tuples` to be an array in the JSON string but got `%s`", jsonObj.get("relation_tuples").toString()));
        }

        // validate the optional field `relation_tuples` (array)
        for (int i = 0; i < jsonArrayrelationTuples.size(); i++) {
          RelationTuple.validateJsonObject(jsonArrayrelationTuples.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetRelationTuplesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetRelationTuplesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetRelationTuplesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetRelationTuplesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetRelationTuplesResponse>() {
           @Override
           public void write(JsonWriter out, GetRelationTuplesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetRelationTuplesResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetRelationTuplesResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetRelationTuplesResponse
  * @throws IOException if the JSON string is invalid with respect to GetRelationTuplesResponse
  */
  public static GetRelationTuplesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetRelationTuplesResponse.class);
  }

 /**
  * Convert an instance of GetRelationTuplesResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

